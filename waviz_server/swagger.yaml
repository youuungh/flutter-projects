openapi: 3.0.0
info:
  title: Waviz Server API
  description: Waviz API
  version: 1.0.0
  contact:
    name: Waviz Team
servers:
  - url: http://localhost:8080/api/v1
    description: Development server

tags:
  - name: Authentication
    description: 사용자 인증 관련 API
  - name: Home
    description: 홈 화면 관련 API
  - name: Category
    description: 카테고리 관련 API
  - name: Project
    description: 프로젝트 관리 API

paths:
  # Authentication APIs
  /signup:
    post:
      tags: [Authentication]
      summary: 회원가입
      description: 새로운 사용자 계정을 생성합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            example:
              email: "user@example.com"
              password: "password123"
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: 회원가입 실패
        '422':
          description: 필수 정보 누락

  /signin:
    post:
      tags: [Authentication]
      summary: 로그인
      description: 사용자 로그인을 처리합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            example:
              email: "user@example.com"
              password: "password123"
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '204':
          description: 등록된 정보 없음
        '422':
          description: 필수 정보 누락

  /restpassword:
    post:
      tags: [Authentication]
      summary: 비밀번호 재설정
      description: 사용자 비밀번호를 재설정합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: 비밀번호 재설정 요청 처리 완료

  /checkauth:
    get:
      tags: [Authentication]
      summary: 이메일 중복 확인
      description: 이메일 주소의 중복 여부를 확인합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: 중복 확인 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'

  # Home APIs
  /home:
    get:
      tags: [Home]
      summary: 홈 화면 데이터 조회
      description: 홈 화면에 표시할 프로젝트 목록을 조회합니다
      responses:
        '200':
          description: 홈 데이터 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeDto'

  # Category APIs
  /category:
    get:
      tags: [Category]
      summary: 전체 카테고리 조회
      description: 모든 카테고리 정보를 조회합니다
      responses:
        '200':
          description: 카테고리 목록 조회 성공

  /category/{category_id}:
    get:
      tags: [Category]
      summary: 카테고리별 프로젝트 조회
      description: 특정 카테고리에 속한 프로젝트들을 조회합니다
      parameters:
        - name: category_id
          in: path
          required: true
          description: 카테고리 ID
          schema:
            type: string
          example: "1"
      responses:
        '200':
          description: 카테고리별 프로젝트 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
        '422':
          description: 카테고리 ID 필수

  /category/{category_id}/{project_type_id}:
    get:
      tags: [Category]
      summary: 카테고리 및 프로젝트 타입별 조회
      description: 특정 카테고리와 프로젝트 타입에 해당하는 프로젝트들을 조회합니다
      parameters:
        - name: category_id
          in: path
          required: true
          description: 카테고리 ID
          schema:
            type: string
          example: "1"
        - name: project_type_id
          in: path
          required: true
          description: 프로젝트 타입 ID
          schema:
            type: string
          example: "1"
      responses:
        '200':
          description: 프로젝트 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'

  # Project APIs
  /project/type:
    get:
      tags: [Project]
      summary: 프로젝트 타입 목록 조회
      description: 사용 가능한 모든 프로젝트 타입을 조회합니다
      responses:
        '200':
          description: 프로젝트 타입 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTypeDto'

  /project:
    post:
      tags: [Project]
      summary: 새 프로젝트 생성
      description: 새로운 프로젝트를 생성합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectItemModel'
      responses:
        '201':
          description: 프로젝트 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'

  /project/{id}:
    get:
      tags: [Project]
      summary: 프로젝트 상세 조회
      description: 특정 프로젝트의 상세 정보를 조회합니다
      parameters:
        - name: id
          in: path
          required: true
          description: 프로젝트 ID
          schema:
            type: string
      responses:
        '200':
          description: 프로젝트 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'

    put:
      tags: [Project]
      summary: 프로젝트 공개 상태 수정
      description: 프로젝트의 공개 상태를 수정합니다
      parameters:
        - name: id
          in: path
          required: true
          description: 프로젝트 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectItemModel'
      responses:
        '200':
          description: 프로젝트 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'

    delete:
      tags: [Project]
      summary: 프로젝트 삭제
      description: 특정 프로젝트를 삭제합니다
      parameters:
        - name: id
          in: path
          required: true
          description: 프로젝트 ID
          schema:
            type: string
      responses:
        '200':
          description: 프로젝트 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'

  /project/user/{userId}:
    get:
      tags: [Project]
      summary: 사용자별 프로젝트 조회
      description: 특정 사용자가 생성한 프로젝트들을 조회합니다
      parameters:
        - name: userId
          in: path
          required: true
          description: 사용자 ID
          schema:
            type: string
      responses:
        '200':
          description: 사용자 프로젝트 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'

  /project/reward/{id}:
    post:
      tags: [Project]
      summary: 프로젝트 리워드 추가
      description: 특정 프로젝트에 리워드를 추가합니다
      parameters:
        - name: id
          in: path
          required: true
          description: 프로젝트 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardItemModel'
      responses:
        '201':
          description: 리워드 추가 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'

components:
  schemas:
    ResponseDto:
      type: object
      properties:
        status:
          type: string
          description: 응답 상태
          example: "ok"
        msg:
          type: string
          description: 응답 메시지
          example: "Success"
        body:
          type: string
          description: 응답 데이터 (JSON 문자열)

    AuthRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: 사용자 이메일
        password:
          type: string
          description: 사용자 비밀번호

    HomeDto:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        totalCount:
          type: integer
          description: 전체 프로젝트 수
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectItemModel'

    CategoryDto:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        totalCount:
          type: integer
          description: 프로젝트 수
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectItemModel'

    ProjectDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectItemModel'

    ProjectTypeDto:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string

    ProjectItemModel:
      type: object
      properties:
        id:
          type: string
          description: 프로젝트 ID
        title:
          type: string
          description: 프로젝트 제목
        description:
          type: string
          description: 프로젝트 설명
        category_id:
          type: string
          description: 카테고리 ID
        project_type_id:
          type: string
          description: 프로젝트 타입 ID
        user_id:
          type: string
          description: 생성자 ID
        target_amount:
          type: number
          description: 목표 금액
        current_amount:
          type: number
          description: 현재 달성 금액
        start_date:
          type: string
          format: date
          description: 시작일
        end_date:
          type: string
          format: date
          description: 종료일
        is_open:
          type: boolean
          description: 공개 여부

    RewardItemModel:
      type: object
      properties:
        id:
          type: string
          description: 리워드 ID
        project_id:
          type: string
          description: 프로젝트 ID
        title:
          type: string
          description: 리워드 제목
        description:
          type: string
          description: 리워드 설명
        price:
          type: number
          description: 리워드 가격
        max_count:
          type: integer
          description: 최대 수량
        current_count:
          type: integer
          description: 현재 신청 수량